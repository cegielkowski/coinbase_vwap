// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "coinbase_vwap/domain"

	mock "github.com/stretchr/testify/mock"
)

// WSClient is an autogenerated mock type for the WSClient type
type WSClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *WSClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubscribeAndRead provides a mock function with given fields: productIds, errChannel, matchesChan
func (_m *WSClient) SubscribeAndRead(productIds []string, errChannel chan<- error, matchesChan chan<- domain.MatchesResponse) {
	_m.Called(productIds, errChannel, matchesChan)
}

type mockConstructorTestingTNewWSClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewWSClient creates a new instance of WSClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWSClient(t mockConstructorTestingTNewWSClient) *WSClient {
	mock := &WSClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
